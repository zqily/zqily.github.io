<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IO方式比较：磁盘IO：缓存IO、直接IO、内存映射</title>
      <link href="/IO%E6%96%B9%E5%BC%8F%E6%AF%94%E8%BE%83%EF%BC%9A%E7%A3%81%E7%9B%98IO%EF%BC%9A%E7%BC%93%E5%AD%98IO%E3%80%81%E7%9B%B4%E6%8E%A5IO%E3%80%81%E5%86%85%E5%AD%98%E6%98%A0%E5%B0%84/"/>
      <url>/IO%E6%96%B9%E5%BC%8F%E6%AF%94%E8%BE%83%EF%BC%9A%E7%A3%81%E7%9B%98IO%EF%BC%9A%E7%BC%93%E5%AD%98IO%E3%80%81%E7%9B%B4%E6%8E%A5IO%E3%80%81%E5%86%85%E5%AD%98%E6%98%A0%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<p>磁盘IO的几种访问方式如下：</p><p><strong></strong></p><p><strong>缓存IO</strong></p><pre><code>缓存I/O又被称作标准I/O，大多数文件系统的默认I/O操作都是缓存I/O。在Linux的缓存I/O机制中，数据先从磁盘复制到内核空间的缓冲区，然后从内核空间缓冲区复制到应用程序的地址空间。读操作：操作系统检查内核的缓冲区有没有需要的数据，如果已经缓存了，那么就直接从缓存中返回；否则从磁盘中读取，然后缓存在操作系统的缓存中。写操作：将数据从用户空间复制到内核空间的缓存中。这时对用户程序来说写操作就已经完成，至于什么时候再写到磁盘中由操作系统决定，除非显示地调用了sync同步命令。缓存I/O的优点：1）在一定程度上分离了内核空间和用户空间，保护系统本身的运行安全；2）可以减少读盘的次数，从而提高性能。缓存I/O的缺点：数据在传输过程中需要在应用程序地址空间和缓存之间进行多次数据拷贝操作，这些数据拷贝操作所带来的CPU以及内存开销是非常大的。</code></pre><p>图 1. 以标准的方式对文件进行读写</p><p> <img src="http://www.ibm.com/developerworks/cn/linux/l-cn-directio/image001.jpg" alt></p><p><strong>直接IO</strong></p><pre><code>直接IO就是应用程序直接访问磁盘数据，而不经过内核缓冲区，这样做的目的是减少一次从内核缓冲区到用户程序缓存的数据复制。比如说数据库管理系统这类应用，它们更倾向于选择它们自己的缓存机制，因为数据库管理系统往往比操作系统更了解数据库中存放的数据，数据库管理系统可以提供一种更加有效的缓存机制来提高数据库中数据的存取性能。直接IO的缺点：如果访问的数据不在应用程序缓存中，那么每次数据都会直接从磁盘加载，这种直接加载会非常缓存。通常直接IO与异步IO结合使用，会得到比较好的性能。（异步IO：当访问数据的线程发出请求之后，线程会接着去处理其他事，而不是阻塞等待）</code></pre><p> 图2. 数据传输不经过操作系统内核缓冲区</p><p><img src="http://www.ibm.com/developerworks/cn/linux/l-cn-directio/image004.jpg" alt></p><p><strong>内存映射</strong></p><pre><code>内存映射是指将硬盘上文件的位置与进程逻辑地址空间中一块大小相同的区域一一对应，当要访问内存中一段数据时，转换为访问文件的某一段数据。这种方式的目的同样是减少数据在用户空间和内核空间之间的拷贝操作。当大量数据需要传输的时候，采用内存映射方式去访问文件会获得比较好的效率。使用内存映射文件处理存储于磁盘上的文件时，将不必再对文件执行I/O操作，这意味着在对文件进行处理时将不必再为文件申请并分配缓存，所有的文件缓存操作均由系统直接管理，由于取消了将文件数据加载到内存、数据从内存到文件的回写以及释放内存块等步骤，使得内存映射文件在处理大数据量的文件时能起到相当重要的作用。</code></pre><p>图 3. 内存映射方式访问</p><p><img src="http://www.ibm.com/developerworks/cn/linux/l-cn-directio/image003.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> 原理学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> 计算机组成 </tag>
            
            <tag> io方式比较 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xrdp配置文件详解</title>
      <link href="/xrdp%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/"/>
      <url>/xrdp%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>xrdp的配置文档在/etc/xrdp目录下的xrdp.ini和sesman.ini</p><ul><li><p>xrdp.ini 关键部分在globals<br><code>[globals]</code></p><p><code>bitmap_cache=`</code>yes<code></code>#位图缓存`</p><p><code>bitmap_compression=`</code>yes<code></code>#位图压缩`</p><p><code>port=3389</code> <code>#监听端口</code></p><p><code>crypt_level=low</code> <code>#加密程度（low为40位，high为128位，medium为双40位）</code></p><p><code>channel_code=1</code> <code>#不知道是什么</code></p></li><li><p>sesman.ini<br><code>[Globals]</code></p><p><code>ListenAddress=127.0.0.1</code> <code>#监听ip地址(默认即可)</code></p><p><code>ListenPort=3350</code> <code>#监听端口(默认即可)</code></p><p><code>EnableUserWindowManager=1</code> <code>#1为开启,可让用户自定义自己的启动脚本</code></p><p><code>UserWindowManager=startwm.sh</code></p><p><code>DefaultWindowManager=startwm.sh</code></p><p><code>[Security]</code></p><p><code>AllowRootLogin=1</code> <code>#允许root登陆</code></p><p><code>MaxLoginRetry=4</code> <code>#最大重试次数</code></p><p><code>TerminalServerUsers=tSUSErs</code> <code>#允许连接的用户组(如果不存在则默认全部用户允许连接)</code></p><p><code>TerminalServerAdmins=tsadmins</code> <code>#允许连接的超级用户(如果不存在则默认全部用户允许连接)</code></p><p><code>[Sessions]</code></p><p><code>MaxSessions=10</code> <code>#最大会话数</code></p><p><code>KillDisconnected=0</code> <code>#是否立即关闭断开的连接(如果为1,则断开连接后会自动注销)</code></p><p><code>IdleTimeLimit=0</code> <code>#空闲会话时间限制(0为没有限制)</code></p><p><code>DisconnectedTimeLimit=0</code> <code>#断开连接的存活时间(0为没有限制)</code></p><p><code>[Logging]</code></p><p><code>LogFile=.`</code>/sesman<code></code>.log<code></code>#登陆日志文件`</p><p><code>LogLevel=DEBUG</code> <code>#登陆日志记录等级(级别分别为,core,error,warn,info,debug)</code></p><p><code>EnableSyslog=0</code> <code>#是否开启日志</code></p><p><code>SyslogLevel=DEBUG</code> <code>#系统日志记录等级</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> xrdp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成：第二次互评作业： cache性能评测与分析</title>
      <link href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%EF%BC%9A%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%BA%92%E8%AF%84%E4%BD%9C%E4%B8%9A%EF%BC%9A%20cache%E6%80%A7%E8%83%BD%E8%AF%84%E6%B5%8B%E4%B8%8E%E5%88%86%E6%9E%90/"/>
      <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%EF%BC%9A%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%BA%92%E8%AF%84%E4%BD%9C%E4%B8%9A%EF%BC%9A%20cache%E6%80%A7%E8%83%BD%E8%AF%84%E6%B5%8B%E4%B8%8E%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="问题1：请说明程序实现的功能。-5分"><a href="#问题1：请说明程序实现的功能。-5分" class="headerlink" title="问题1：请说明程序实现的功能。(5分)"></a>问题1：请说明程序实现的功能。(5分)</h2><p>（提示：可以利用“Math”编辑输入数学公式，建议提交之前用Previe查看输入效果）<br>程序结束之后，array中一共有28个word连续储存于起始地址为array的起始地址的内存中，其中：<br>array[0]=array[1]=array[2]=1;<br>array[n]=array[n-1]+array[n-2]+array<a href="n&gt;=3">n-3</a>。</p><h2 id="问题2：分析程序的访存行为，仅考虑数据访存。（5分）"><a href="#问题2：分析程序的访存行为，仅考虑数据访存。（5分）" class="headerlink" title="问题2：分析程序的访存行为，仅考虑数据访存。（5分）"></a>问题2：分析程序的访存行为，仅考虑数据访存。（5分）</h2><p>（提示：访存行为包括程序一共发生了多少次访存操作，每次访存操作的地址之间有什么样的关系等）<br>每次loop中存在lw指令3条，sw指令一条，访存4次；因此25次循环共访存100次。</p><p>每次循环的3次lw指令访问与$t0所保存地址offset为0，4，8的位置，为内存上连续存储的3个word；sw指令访问与当前$t0所保存地址offset为12的位置，与同一循环中lw指令所访问的地址连续。因此同一loop的4次访存操作所涉及的地址均为连续的地址。</p><h2 id="问题3：根据MARS内置的Data-Cache-Simulation-Tool，构建一个容量为8字节的cache，要求块大小为4字节（one-word），替换策略为LRU，组策略为直接映射。运行上述MIPS程序，得到cache命中率为多少？（5分）"><a href="#问题3：根据MARS内置的Data-Cache-Simulation-Tool，构建一个容量为8字节的cache，要求块大小为4字节（one-word），替换策略为LRU，组策略为直接映射。运行上述MIPS程序，得到cache命中率为多少？（5分）" class="headerlink" title="问题3：根据MARS内置的Data Cache Simulation Tool，构建一个容量为8字节的cache，要求块大小为4字节（one word），替换策略为LRU，组策略为直接映射。运行上述MIPS程序，得到cache命中率为多少？（5分）"></a>问题3：根据MARS内置的Data Cache Simulation Tool，构建一个容量为8字节的cache，要求块大小为4字节（one word），替换策略为LRU，组策略为直接映射。运行上述MIPS程序，得到cache命中率为多少？（5分）</h2><p>Cache Hit Rate=24%</p><h2 id="问题4：结合程序的访存行为，详细分析问题3中cache-miss的原因。（10分）"><a href="#问题4：结合程序的访存行为，详细分析问题3中cache-miss的原因。（10分）" class="headerlink" title="问题4：结合程序的访存行为，详细分析问题3中cache miss的原因。（10分）"></a>问题4：结合程序的访存行为，详细分析问题3中cache miss的原因。（10分）</h2><p>cache size=8，block size=4，所以一共8/4=2，2个block。<br>组策略为直接映射，所以：</p><p>设第一次访存的顺序为(0,1,2,3),第二次为(1,2,3,4),第三次为(2,3,4,5),cache中为(void,void)，则：</p><p>Round1(0,1,2,3):<br>(0,void)-&gt;(0,1)-&gt;(2,1)-&gt;(2,3) | hit = 0 , miss=4;<br>Round2(1,2,3,4):<br>(2,1)-&gt;(2,1)-&gt;(2,3)-&gt;(4,3) | hit =1 , miss = 3;<br>Round3(2,3,4,5):<br>(2,3)-&gt;(2,3)-&gt;(4,3)-&gt;(5,3) | hit =1 , miss = 3;</p><p>Round4~Round25会复现Round2，Round3的操作，因此loop25次之后，hit count=24， miss count=76.<br>Cache Hit Rate=24%</p><h2 id="问题5：根据MARS内置的Data-Cache-Simulation-Tool，构建一个容量为8字节的cache，要求块大小为4字节（one-word），替换策略为LRU，组策略为全相联。运行上述MIPS程序，得到cache命中率为多少？（5分）"><a href="#问题5：根据MARS内置的Data-Cache-Simulation-Tool，构建一个容量为8字节的cache，要求块大小为4字节（one-word），替换策略为LRU，组策略为全相联。运行上述MIPS程序，得到cache命中率为多少？（5分）" class="headerlink" title="问题5：根据MARS内置的Data Cache Simulation Tool，构建一个容量为8字节的cache，要求块大小为4字节（one word），替换策略为LRU，组策略为全相联。运行上述MIPS程序，得到cache命中率为多少？（5分）"></a>问题5：根据MARS内置的Data Cache Simulation Tool，构建一个容量为8字节的cache，要求块大小为4字节（one word），替换策略为LRU，组策略为全相联。运行上述MIPS程序，得到cache命中率为多少？（5分）</h2><p>Cache Hit Rate=0%<br>提示</p><h2 id="问题6：结合程序的访存行为，详细分析问题5中cache-miss的原因。（10分）"><a href="#问题6：结合程序的访存行为，详细分析问题5中cache-miss的原因。（10分）" class="headerlink" title="问题6：结合程序的访存行为，详细分析问题5中cache miss的原因。（10分）"></a>问题6：结合程序的访存行为，详细分析问题5中cache miss的原因。（10分）</h2><p>cache size=8，block size=4，所以一共8/4=2，2个block。<br>组策略为全相联，所以：</p><p>设第一次访存的顺序为(0,1,2,3),第二次为(1,2,3,4),第三次为(2,3,4,5),cache中为(void,void)，则：</p><p>Round1(0,1,2,3):<br>(0,void)-&gt;(0,1)-&gt;(2,1)-&gt;(2,3) | hit = 0 , miss=4;<br>Round2(1,2,3,4):<br>(1,3)-&gt;(1,2)-&gt;(3,2)-&gt;(3,4) | hit =0 , miss = 4;<br>Round3(2,3,4,5):<br>(2,4)-&gt;(2,3)-&gt;(4,3)-&gt;(4,5) | hit =0 , miss = 4;</p><p>Round4~Round25会复现Round2，Round3的操作，因此loop25次之后，hit count=0， miss count=100.<br>Cache Hit Rate=0%</p><h2 id="问题7：保持其他参数不变，通过增加block数量的方式将cache的容量扩大为16个字节，评测不同组策略下cache命中率的变化，并分析原因？进一步扩大cache容量，cache命中率会如何变化？（10分）"><a href="#问题7：保持其他参数不变，通过增加block数量的方式将cache的容量扩大为16个字节，评测不同组策略下cache命中率的变化，并分析原因？进一步扩大cache容量，cache命中率会如何变化？（10分）" class="headerlink" title="问题7：保持其他参数不变，通过增加block数量的方式将cache的容量扩大为16个字节，评测不同组策略下cache命中率的变化，并分析原因？进一步扩大cache容量，cache命中率会如何变化？（10分）"></a>问题7：保持其他参数不变，通过增加block数量的方式将cache的容量扩大为16个字节，评测不同组策略下cache命中率的变化，并分析原因？进一步扩大cache容量，cache命中率会如何变化？（10分）</h2><p>16字节下不同组策略均为72%，继续扩大命中率不变</p><p>cache size=16，block size=4，所以一共16/4=2，4个block。<br>cache中始终能保存连续4个地址的数据<br>后续循环中的前三次均能hit，第四次为义务miss<br>Cache Hit Rate=3*24/100=72%<br>当block增大时始终无法避免义务失效，因此Hit Rate保持不变。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">  .data</span><br><span class="line">bletter:.asciiz </span><br><span class="line"><span class="string">"Alpha "</span>,<span class="string">"Bravo "</span>,<span class="string">"China "</span>,<span class="string">"Delta "</span>,<span class="string">"Echo "</span>,<span class="string">"Foxtrot "</span>,<span class="string">"Golf "</span>,<span class="string">"Hotel "</span>,<span class="string">"India "</span>,</span><br><span class="line"><span class="string">"Juliet "</span>,<span class="string">"Kilo "</span>,<span class="string">"Lima "</span>,<span class="string">"Mary "</span>,<span class="string">"November "</span>,<span class="string">"Oscar "</span>,<span class="string">"Paper "</span>,<span class="string">"Quebec "</span>,<span class="string">"Research "</span>,</span><br><span class="line"><span class="string">"Sierra "</span>,<span class="string">"Tango "</span>,<span class="string">"Uniform "</span>,<span class="string">"Victor "</span>,<span class="string">"Whisky "</span>,<span class="string">"X-ray "</span>,<span class="string">"Yankee "</span>,<span class="string">"Zulu "</span></span><br><span class="line">bltr_offset: .word</span><br><span class="line"><span class="number">0</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">21</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">43</span>,<span class="number">49</span>,<span class="number">56</span>,<span class="number">63</span>,<span class="number">71</span>,<span class="number">77</span>,<span class="number">83</span>,<span class="number">89</span>,<span class="number">99</span>,<span class="number">106</span>,<span class="number">113</span>,<span class="number">121</span>,<span class="number">131</span>,<span class="number">139</span>,<span class="number">146</span>,<span class="number">155</span>,<span class="number">163</span>,<span class="number">171</span>,<span class="number">178</span>,<span class="number">186</span></span><br><span class="line">number: .asciiz </span><br><span class="line"><span class="string">"zero "</span>,<span class="string">"First "</span>,<span class="string">"Second "</span>,<span class="string">"Third "</span>,<span class="string">"Fourth "</span>,<span class="string">"Fifth "</span>,<span class="string">"Sixth "</span>,<span class="string">"Seventh "</span>,<span class="string">"Eighth "</span>,<span class="string">"Ninth "</span></span><br><span class="line">num_offset: .word</span><br><span class="line"><span class="number">0</span>,<span class="number">6</span>,<span class="number">13</span>,<span class="number">21</span>,<span class="number">28</span>,<span class="number">36</span>,<span class="number">43</span>,<span class="number">50</span>,<span class="number">59</span>,<span class="number">67</span></span><br><span class="line">sletter:.asciiz </span><br><span class="line"><span class="string">"alpha "</span>,<span class="string">"bravo "</span>,<span class="string">"china "</span>,<span class="string">"delta "</span>,<span class="string">"echo "</span>,<span class="string">"foxtrot "</span>,<span class="string">"golf "</span>,<span class="string">"hotel "</span>,<span class="string">"india "</span>,</span><br><span class="line"><span class="string">"juliet "</span>,<span class="string">"kilo "</span>,<span class="string">"lima "</span>,<span class="string">"mary "</span>,<span class="string">"november "</span>,<span class="string">"oscar "</span>,<span class="string">"paper "</span>,<span class="string">"quebec "</span>,<span class="string">"research "</span>,</span><br><span class="line"><span class="string">"sierra "</span>,<span class="string">"tango "</span>,<span class="string">"uniform "</span>,<span class="string">"victor "</span>,<span class="string">"whisky "</span>,<span class="string">"x-ray "</span>,<span class="string">"yankee "</span>,<span class="string">"zulu "</span></span><br><span class="line">sltr_offset:.word</span><br><span class="line"><span class="number">0</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">21</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">43</span>,<span class="number">49</span>,<span class="number">56</span>,<span class="number">63</span>,<span class="number">71</span>,<span class="number">77</span>,<span class="number">83</span>,<span class="number">89</span>,<span class="number">99</span>,<span class="number">106</span>,<span class="number">113</span>,<span class="number">121</span>,<span class="number">131</span>,<span class="number">139</span>,<span class="number">146</span>,<span class="number">155</span>,<span class="number">163</span>,<span class="number">171</span>,<span class="number">178</span>,<span class="number">186</span></span><br><span class="line"></span><br><span class="line">.text</span><br><span class="line">.globl main</span><br><span class="line">main:li $v0, 12      #read character</span><br><span class="line">syscall         #load argument values</span><br><span class="line">sub $t0,$v0,63  #"?"</span><br><span class="line">beqz $t0,exit</span><br><span class="line">sub $t0,$v0,48  # &lt; '0'</span><br><span class="line">bltz $t0,other</span><br><span class="line"></span><br><span class="line">sub $t1,$t0,10  #'0'&lt;= val &lt;= '9'</span><br><span class="line">bltz $t1,num</span><br><span class="line"></span><br><span class="line">sub $t1,$t0,17  #'9' &lt; val &lt; 'A'</span><br><span class="line">bltz $t1,other</span><br><span class="line">sub $t2,$t1,26  #'A' &lt; val &lt; 'Z'</span><br><span class="line">bltz $t2,bltr</span><br><span class="line"></span><br><span class="line">sub $t3,$t2,6   #'Z' &lt; val &lt; 'a'</span><br><span class="line">bltz $t3,other</span><br><span class="line">sub $t3,$t2,32  #'a' &lt; val &lt; 'z'</span><br><span class="line">bltz $t3,sltr</span><br><span class="line"></span><br><span class="line">num:add $t1,$t1,<span class="number">10</span></span><br><span class="line">sll $t1,$t1,2   # ,居然也算一位</span><br><span class="line">la $s0,num_offset</span><br><span class="line">add $s0,$s0,$t1</span><br><span class="line">lw $s1,($s0)</span><br><span class="line">la $a0,number</span><br><span class="line">add $a0,$a0,$s1</span><br><span class="line">li $v0,4        #print string</span><br><span class="line">syscall</span><br><span class="line">j main</span><br><span class="line"> </span><br><span class="line">bltr:sll $t1,$t1,<span class="number">2</span></span><br><span class="line">la $s0,bltr_offset</span><br><span class="line">add $s0,$s0,$t1</span><br><span class="line">lw $s1,($s0)</span><br><span class="line">la $a0,bletter</span><br><span class="line">add $a0,$a0,$s1</span><br><span class="line">li $v0,<span class="number">4</span></span><br><span class="line">syscall</span><br><span class="line">j main</span><br><span class="line"> </span><br><span class="line">sltr:add $t3,$t3,<span class="number">26</span></span><br><span class="line">sll $t3,$t3,<span class="number">2</span></span><br><span class="line">la $s0,sltr_offset</span><br><span class="line">add $s0,$s0,$t3</span><br><span class="line">lw $s1,($s0)</span><br><span class="line">la $a0,sletter</span><br><span class="line">add $a0,$a0,$s1</span><br><span class="line">li $v0,<span class="number">4</span></span><br><span class="line">syscall</span><br><span class="line">j main</span><br><span class="line"></span><br><span class="line">other:li $a0,<span class="number">42</span></span><br><span class="line">li $v0,<span class="number">11</span></span><br><span class="line">syscall</span><br><span class="line">j main</span><br><span class="line"></span><br><span class="line">exit:li $v0,<span class="number">10</span></span><br><span class="line">syscall</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机组成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成：第一次互评作业：MIPS汇编程序设计</title>
      <link href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%EF%BC%9A%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BA%92%E8%AF%84%E4%BD%9C%E4%B8%9A%EF%BC%9AMIPS%E6%B1%87%E7%BC%96%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
      <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%EF%BC%9A%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BA%92%E8%AF%84%E4%BD%9C%E4%B8%9A%EF%BC%9AMIPS%E6%B1%87%E7%BC%96%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="第一题：用系统功能调用实现简单输入输出"><a href="#第一题：用系统功能调用实现简单输入输出" class="headerlink" title="第一题：用系统功能调用实现简单输入输出"></a><strong>第一题：用系统功能调用实现简单输入输出</strong></h3><p>利用系统功能调用从键盘输入，转换后在屏幕上显示，具体要求如下：</p><ol><li>如果输入的是字母（A~Z，区分大小写）或数字（0~9），则将其转换成对应的英文单词后在屏幕上显示，对应关系见下表</li><li>若输入的不是字母或数字，则在屏幕上输出字符“*”</li><li>每输入一个字符，即时转换并在屏幕上显示</li><li>支持反复输入，直到按“?”键结束程序</li></ol><table><thead><tr><th style="text-align:center">字母</th><th style="text-align:center">单词</th><th style="text-align:center">字母</th><th style="text-align:center">单词</th><th style="text-align:center">数字</th><th style="text-align:center">单词</th><th style="text-align:center">字母</th><th style="text-align:center">单词</th><th style="text-align:center">字母</th><th style="text-align:center">单词</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">Alpha</td><td style="text-align:center">N</td><td style="text-align:center">November</td><td style="text-align:center">1</td><td style="text-align:center">First</td><td style="text-align:center">a</td><td style="text-align:center">alpha</td><td style="text-align:center">n</td><td style="text-align:center">november</td></tr><tr><td style="text-align:center">B</td><td style="text-align:center">Bravo</td><td style="text-align:center">O</td><td style="text-align:center">Oscar</td><td style="text-align:center">2</td><td style="text-align:center">Second</td><td style="text-align:center">b</td><td style="text-align:center">bravo</td><td style="text-align:center">o</td><td style="text-align:center">oscar</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">China</td><td style="text-align:center">P</td><td style="text-align:center">Paper</td><td style="text-align:center">3</td><td style="text-align:center">Third</td><td style="text-align:center">c</td><td style="text-align:center">china</td><td style="text-align:center">p</td><td style="text-align:center">paper</td></tr><tr><td style="text-align:center">D</td><td style="text-align:center">Delta</td><td style="text-align:center">Q</td><td style="text-align:center">Quebec</td><td style="text-align:center">4</td><td style="text-align:center">Fourth</td><td style="text-align:center">d</td><td style="text-align:center">delta</td><td style="text-align:center">q</td><td style="text-align:center">quebec</td></tr><tr><td style="text-align:center">E</td><td style="text-align:center">Echo</td><td style="text-align:center">R</td><td style="text-align:center">Research</td><td style="text-align:center">5</td><td style="text-align:center">Fifth</td><td style="text-align:center">e</td><td style="text-align:center">echo</td><td style="text-align:center">r</td><td style="text-align:center">research</td></tr><tr><td style="text-align:center">F</td><td style="text-align:center">Foxtrot</td><td style="text-align:center">S</td><td style="text-align:center">Sierra</td><td style="text-align:center">6</td><td style="text-align:center">Sixth</td><td style="text-align:center">f</td><td style="text-align:center">foxtrot</td><td style="text-align:center">s</td><td style="text-align:center">sierra</td></tr><tr><td style="text-align:center">G</td><td style="text-align:center">Golf</td><td style="text-align:center">T</td><td style="text-align:center">Tango</td><td style="text-align:center">7</td><td style="text-align:center">Seventh</td><td style="text-align:center">g</td><td style="text-align:center">golf</td><td style="text-align:center">t</td><td style="text-align:center">tango</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">Hotel</td><td style="text-align:center">U</td><td style="text-align:center">Uniform</td><td style="text-align:center">8</td><td style="text-align:center">Eighth</td><td style="text-align:center">h</td><td style="text-align:center">hotel</td><td style="text-align:center">u</td><td style="text-align:center">uniform</td></tr><tr><td style="text-align:center">I</td><td style="text-align:center">India</td><td style="text-align:center">V</td><td style="text-align:center">Victor</td><td style="text-align:center">9</td><td style="text-align:center">Ninth</td><td style="text-align:center">i</td><td style="text-align:center">india</td><td style="text-align:center">v</td><td style="text-align:center">victor</td></tr><tr><td style="text-align:center">J</td><td style="text-align:center">Juliet</td><td style="text-align:center">W</td><td style="text-align:center">Whisky</td><td style="text-align:center">0</td><td style="text-align:center">zero</td><td style="text-align:center">j</td><td style="text-align:center">juliet</td><td style="text-align:center">w</td><td style="text-align:center">whisky</td></tr><tr><td style="text-align:center">K</td><td style="text-align:center">Kilo</td><td style="text-align:center">X</td><td style="text-align:center">X-ray</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">k</td><td style="text-align:center">kilo</td><td style="text-align:center">x</td><td style="text-align:center">x-ray</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">Lima</td><td style="text-align:center">Y</td><td style="text-align:center">Yankee</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">l</td><td style="text-align:center">lima</td><td style="text-align:center">y</td><td style="text-align:center">yankee</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">Mary</td><td style="text-align:center">Z</td><td style="text-align:center">Zulu</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">m</td><td style="text-align:center">mary</td><td style="text-align:center">z</td><td style="text-align:center">zulu</td></tr></tbody></table><h4 id="第一题代码："><a href="#第一题代码：" class="headerlink" title="第一题代码："></a><strong>第一题代码：</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">            .data</span><br><span class="line">u_word:     .asciiz</span><br><span class="line">            &quot;Alpha &quot;,&quot;Bravo &quot;,&quot;China &quot;,&quot;Delta &quot;,&quot;Echo &quot;,&quot;Foxtrot &quot;,</span><br><span class="line">            &quot;Golf &quot;,&quot;Hotel &quot;,&quot;India &quot;,&quot;Juliet &quot;,&quot;Kilo &quot;,&quot;Lima &quot;,</span><br><span class="line">            &quot;Mary &quot;,&quot;November &quot;,&quot;Oscar &quot;,&quot;Paper &quot;,&quot;Quebec &quot;,&quot;Research &quot;,</span><br><span class="line">            &quot;Sierra &quot;,&quot;Tango &quot;,&quot;Uniform &quot;,&quot;Victor &quot;,&quot;Whisky &quot;,&quot;X-ray &quot;,</span><br><span class="line">            &quot;Yankee &quot;,&quot;Zulu &quot;</span><br><span class="line">uw_offset:  .word</span><br><span class="line">            0,7,14,21,28,34,43,49,56,63,71,</span><br><span class="line">            77,83,89,99,106,113,121,131,</span><br><span class="line">            139,146,155,163,171,178,186</span><br><span class="line">l_word:     .asciiz</span><br><span class="line">            &quot;alpha &quot;,&quot;bravo &quot;,&quot;china &quot;,&quot;delta &quot;,&quot;echo &quot;,&quot;foxtrot &quot;,</span><br><span class="line">            &quot;golf &quot;,&quot;hotel &quot;,&quot;india &quot;,&quot;juliet &quot;,&quot;kilo &quot;,&quot;lima &quot;,</span><br><span class="line">            &quot;mary &quot;,&quot;november &quot;,&quot;oscar &quot;,&quot;paper &quot;,&quot;quebec &quot;,&quot;research &quot;,</span><br><span class="line">            &quot;sierra &quot;,&quot;tango &quot;,&quot;uniform &quot;,&quot;victor &quot;,&quot;whisky &quot;,&quot;x-ray &quot;,</span><br><span class="line">            &quot;yankee &quot;,&quot;zulu &quot;</span><br><span class="line">lw_offset:  .word</span><br><span class="line">            0,7,14,21,28,34,43,49,56,63,71,</span><br><span class="line">            77,83,89,99,106,113,121,131,</span><br><span class="line">            139,146,155,163,171,178,186</span><br><span class="line">number:     .asciiz</span><br><span class="line">            &quot;zero &quot;, &quot;First &quot;, &quot;Second &quot;, &quot;Third &quot;, &quot;Fourth &quot;,</span><br><span class="line">            &quot;Fifth &quot;, &quot;Sixth &quot;, &quot;Seventh &quot;,&quot;Eighth &quot;,&quot;Ninth &quot;</span><br><span class="line">n_offset:   .word</span><br><span class="line">            0,6,13,21,28,36,43,50,59,67</span><br><span class="line"></span><br><span class="line">            .text</span><br><span class="line">            .globl main</span><br><span class="line">main:       li $v0, 12 # read character</span><br><span class="line">            syscall</span><br><span class="line">            sub $t1, $v0, 63 # &apos;?&apos;</span><br><span class="line">            beqz $t1, exit</span><br><span class="line">            sub $t1, $v0, 48 # &apos;0&apos;</span><br><span class="line">            slt $s0, $t1, $0 # if t1 &lt; 0 then s0 = 1</span><br><span class="line">            bnez $s0, others</span><br><span class="line"></span><br><span class="line">            # is number?</span><br><span class="line">            sub $t2, $t1, 10 # number</span><br><span class="line">            slt $s1, $t2, $0 # if t2 &lt; 0 then s1 = 1</span><br><span class="line">            bnez $s1, getnum</span><br><span class="line"></span><br><span class="line">            # is capital?</span><br><span class="line">            sub $t2, $v0, 91</span><br><span class="line">            slt $s3, $t2, $0 # if v0 &lt;= &apos;Z&apos; then s3 = 1</span><br><span class="line">            sub $t3, $v0, 64 </span><br><span class="line">            sgt $s4, $t3, $0 # if v0 &gt;=&apos;A&apos; then s4 = 1</span><br><span class="line">            and $s0, $s3, $s4 # if s3 == 1 &amp;&amp; s4 == 1 </span><br><span class="line">            bnez $s0, getuword</span><br><span class="line"></span><br><span class="line">            # is lower case?</span><br><span class="line">            sub $t2, $v0, 123</span><br><span class="line">            slt $s3, $t2, $0 # if v0 &lt;= &apos;z&apos; then s3 = 1</span><br><span class="line">            sub $t3, $v0, 96 </span><br><span class="line">            sgt $s4, $t3, $0 # if v0 &gt;= &apos;a&apos; then s4 = 1</span><br><span class="line">            and $s0, $s3, $s4</span><br><span class="line">            bnez $s0, getlword</span><br><span class="line">            j others</span><br><span class="line"></span><br><span class="line">getnum:     add $t2, $t2, 10</span><br><span class="line">            sll $t2, $t2, 2</span><br><span class="line">            la $s0, n_offset</span><br><span class="line">            add $s0, $s0, $t2</span><br><span class="line">            lw $s1, ($s0)</span><br><span class="line">            la $a0, number</span><br><span class="line">            add $a0, $a0, $s1</span><br><span class="line">            li $v0, 4</span><br><span class="line">            syscall</span><br><span class="line">            j main</span><br><span class="line"></span><br><span class="line">            # upper case word</span><br><span class="line">getuword:   sub $t3, $t3, 1</span><br><span class="line">            sll $t3, $t3, 2</span><br><span class="line">            la $s0, uw_offset</span><br><span class="line">            add $s0, $s0, $t3</span><br><span class="line">            lw $s1, ($s0)</span><br><span class="line">            la $a0, u_word</span><br><span class="line">            add $a0, $s1, $a0</span><br><span class="line">            li $v0, 4</span><br><span class="line">            syscall</span><br><span class="line">            j main</span><br><span class="line"></span><br><span class="line">            # lower case word</span><br><span class="line">getlword:   sub $t3, $t3, 1</span><br><span class="line">            sll $t3, $t3, 2</span><br><span class="line">            la $s0, lw_offset</span><br><span class="line">            add $s0, $s0, $t3</span><br><span class="line">            lw $s1, ($s0)</span><br><span class="line">            la $a0, l_word</span><br><span class="line">            add $a0, $s1, $a0</span><br><span class="line">            li $v0, 4</span><br><span class="line">            syscall</span><br><span class="line">            j main</span><br><span class="line"></span><br><span class="line">others:     and $a0, $0, $0</span><br><span class="line">            add $a0, $a0, 42 # &apos;*&apos;</span><br><span class="line">            li $v0, 11 # print character</span><br><span class="line">            syscall</span><br><span class="line">            j main</span><br><span class="line"></span><br><span class="line">exit:       li $v0, 10 # exit</span><br><span class="line">            syscall</span><br></pre></td></tr></table></figure><h3 id="第二题：字符串查找比较"><a href="#第二题：字符串查找比较" class="headerlink" title="第二题：字符串查找比较"></a><strong>第二题：字符串查找比较</strong></h3><p>利用系统功能调用从键盘输入一个字符串，然后输入单个字符，查找该字符串中是否有该字符（区分大小写）。具体要求如下：</p><ol><li>如果找到，则在屏幕上显示：“Success! Location: X”，其中，X为该字符在字符串中第一次出现的位置</li><li>如果没找到，则在屏幕上显示：“Fail!”</li><li>输入一个字符串后，可以反复输入希望查询的字符，直到按“?”键结束程序</li><li>每个输入字符独占一行，输出查找结果独占一行，位置编码从1开始</li></ol><p>提示：为避免歧义，字符串内不包含“?”符号<br>格式示例如下：</p><p><strong>abcdefgh</strong><br><strong>a</strong><br><strong>Success! Location: 1</strong><br><strong>x</strong><br><strong>Fail!</strong></p><h4 id="第二题代码："><a href="#第二题代码：" class="headerlink" title="第二题代码："></a><strong>第二题代码：</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">            .data</span><br><span class="line">msg_s:      .asciiz &quot;\r\nSuccess! Location: &quot;</span><br><span class="line">msg_f:      .asciiz &quot;\r\nFail!\r\n&quot;</span><br><span class="line">s_end:      .asciiz &quot;\r\n&quot;</span><br><span class="line">buf:        .space 100</span><br><span class="line"></span><br><span class="line">            .text</span><br><span class="line">            .globl main</span><br><span class="line">main:       la $a0, buf # address of input buffer</span><br><span class="line">            la $a1, 100 # maximum number of characters to read</span><br><span class="line">            li $v0, 8 # read string</span><br><span class="line">            syscall</span><br><span class="line"></span><br><span class="line">inputchar:  li $v0, 12 # read character</span><br><span class="line">            syscall</span><br><span class="line">            addi $t7, $0, 63 # &apos;?&apos;</span><br><span class="line">            sub $t6, $t7, $v0</span><br><span class="line">            beq $t6, $0, exit</span><br><span class="line">            add $t0, $0, $0</span><br><span class="line">            la $s1, buf</span><br><span class="line"></span><br><span class="line">find_loop:  lb $s0, 0($s1)</span><br><span class="line">            sub $t1, $v0, $s0</span><br><span class="line">            beq $t1, $0, success</span><br><span class="line">            addi $t0, $t0, 1</span><br><span class="line">            slt $t3, $t0, $a1</span><br><span class="line">            beq $t3, $0, fail</span><br><span class="line">            addi $s1 $s1, 1</span><br><span class="line">            j find_loop</span><br><span class="line"></span><br><span class="line">success:    la $a0, msg_s</span><br><span class="line">            li $v0, 4 # print string</span><br><span class="line">            syscall</span><br><span class="line">            addi $a0, $t0, 1</span><br><span class="line">            li $v0, 1 # print integer</span><br><span class="line">            syscall</span><br><span class="line">            la $a0, s_end</span><br><span class="line">            li $v0, 4</span><br><span class="line">            syscall</span><br><span class="line">            j inputchar</span><br><span class="line"></span><br><span class="line">fail:       la $a0, msg_f</span><br><span class="line">            li $v0, 4</span><br><span class="line">            syscall</span><br><span class="line">            j inputchar</span><br><span class="line"></span><br><span class="line">exit:       li $v0, 10</span><br><span class="line">            syscall</span><br></pre></td></tr></table></figure><p>[</p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HexoEditor编写MarkDown自动上传替换七牛外链</title>
      <link href="/HexoEditor%E7%BC%96%E5%86%99MarkDown%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E6%9B%BF%E6%8D%A2%E4%B8%83%E7%89%9B%E5%A4%96%E9%93%BE/"/>
      <url>/HexoEditor%E7%BC%96%E5%86%99MarkDown%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E6%9B%BF%E6%8D%A2%E4%B8%83%E7%89%9B%E5%A4%96%E9%93%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>继之前介绍的如何搭建个人博客，如何完善博客各种功能，今天来介绍一下配合Hexo框架和Next主题来写文章的利器——HexoEditor。以及用七牛云保存图片，并用外链的方式在Hexo文章中显示图片。</p><hr><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><blockquote><p>os: Windows</p></blockquote><hr><h1 id="HexoEditor"><a href="#HexoEditor" class="headerlink" title="HexoEditor"></a>HexoEditor</h1><p>HexoEditor是一款配和Hexo框架和Next主题，写Markdown文章的编辑器。废话不多说，先上GitHub地址。</p><p><a href="https://github.com/zhuzhuyule/HexoEditor/blob/master/doc/cn/README.md" target="_blank" rel="noopener">GitHub</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装的话可以看<a href="http://zqily.com安装" target="_blank" rel="noopener">这里</a>，我有介绍过。</p><h2 id="打开"><a href="#打开" class="headerlink" title="打开"></a>打开</h2><p>在HexoEditor的根目录（根目录下有app,doc,icons等文件夹）下面，打开<code>Git Bash</code>，执行命令：</p><blockquote><p>npm start</p></blockquote><p>等一会儿就会出现HexoEditor编辑器。点击左下角会出现菜单栏。</p><p><img src="http://pai5cscef.bkt.clouddn.com/%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BDMarkdown%E6%96%87%E7%AB%A0%EF%BC%9FHexoEditor%E5%8A%A9%E4%BD%A0%E5%86%99%E5%87%BA%E4%B8%80%E7%AF%87%E5%A5%BDHexo%E6%96%87%E7%AB%A0/20180618052712819.png" alt></p><p>如果要写博文，就新建Post。</p><p>新建的文章会根据<code>/yoursite/scaffolds/post.md</code>模板自动生成一些内容，其实也就是这个文件的内容，如果想修改模板，就直接修改这个就行了。</p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>写文章的话，左边写，右边就会实时显示样式。没什么好讲的，所以重点讲一讲这个设置里面的图片设置（以七牛云为例）。</p><p>为什么要重点讲这个图片设置？<br>写文章的时候，图片有两种方式展现在页面上，一种是从本地读取，一种是从一个外链上读取。<br>本地读取的话，图片都保存在Coding上面，很占用空间，速度也不快。<br>所以一般选择将图片保存在七牛云或者别的地方，然后通过外链调用。</p><p><img src="http://pai5cscef.bkt.clouddn.com/%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BDMarkdown%E6%96%87%E7%AB%A0%EF%BC%9FHexoEditor%E5%8A%A9%E4%BD%A0%E5%86%99%E5%87%BA%E4%B8%80%E7%AF%87%E5%A5%BDHexo%E6%96%87%E7%AB%A0/20180618053310449.png" alt></p><ul><li>默认资源库：把你放在文章里面的图片存到这个目录下，可以在任意位置。</li><li>云图类型：七牛云、腾通自己选。</li><li>Access Key：从你七牛云或者百度云获取。</li><li>Secret Key：同上。</li><li>下面两个在填完上面两个Key之后会自动生成。</li></ul><h3 id="七牛云"><a href="#七牛云" class="headerlink" title="七牛云"></a>七牛云</h3><p>要使用七牛云，当然是先注册一个啦，<a href="https://portal.qiniu.com/signup?code=3l9qmvo8g6uz6" target="_blank" rel="noopener">点击进入注册页面</a>。实话实说，这是我的邀请链接，可以帮我增加每个月的下载流量。</p><p>注册好了之后，找到对象存储-&gt;立即添加。</p><p><img src="http://dugblog.coding.me/%E5%A6%82%E4%BD%95%E7%94%A8%E4%B8%83%E7%89%9B%E4%BA%91%E4%BF%9D%E5%AD%98Hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E7%9A%84%E5%9B%BE%E7%89%87%EF%BC%8C%E5%B9%B6%E9%80%9A%E8%BF%87%E5%A4%96%E9%93%BE%E6%98%BE%E7%A4%BA%E5%9C%A8%E6%96%87%E7%AB%A0%E4%B8%AD/20180618054842730.png" alt></p><p>很好，会提示你实名验证，那就只有老老实实的实名验证啦~验证时间大概是两到三天，可以先收藏着我的文章，验证好了再来看~XD</p><p>验证好了之后，填好创建信息，确定创建。然后点击右上角个人面板，密钥管理</p><p><img src="http://pai5cscef.bkt.clouddn.com/%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BDMarkdown%E6%96%87%E7%AB%A0%EF%BC%9FHexoEditor%E5%8A%A9%E4%BD%A0%E5%86%99%E5%87%BA%E4%B8%80%E7%AF%87%E5%A5%BDHexo%E6%96%87%E7%AB%A0/20180618055558859.png" alt></p><p>可以看到两个Key的值</p><p><img src="http://pai5cscef.bkt.clouddn.com/%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BDMarkdown%E6%96%87%E7%AB%A0%EF%BC%9FHexoEditor%E5%8A%A9%E4%BD%A0%E5%86%99%E5%87%BA%E4%B8%80%E7%AF%87%E5%A5%BDHexo%E6%96%87%E7%AB%A0/20180618055634989.png" alt></p><p>这两个值就是刚刚HexoEditor的图片设置里面要填的。</p><h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use?"></a>How to use?</h2><p>怎么用这个图床功能呢？</p><p>用HexoEditor写文章的时候，将你的图片直接复制，或者写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](图片绝对路径)</span><br></pre></td></tr></table></figure><p>然后右键，上传七牛云，接下来就是I have a HexoEditor, I have a qiniu, Bang! 你会发现</p><p><img src="http://pai5cscef.bkt.clouddn.com/%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BDMarkdown%E6%96%87%E7%AB%A0%EF%BC%9FHexoEditor%E5%8A%A9%E4%BD%A0%E5%86%99%E5%87%BA%E4%B8%80%E7%AF%87%E5%A5%BDHexo%E6%96%87%E7%AB%A0/20180618060123794.png" alt></p><p>这样的路径图片会变成一个外链图片</p><p><img src="http://pai5cscef.bkt.clouddn.com/%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BDMarkdown%E6%96%87%E7%AB%A0%EF%BC%9FHexoEditor%E5%8A%A9%E4%BD%A0%E5%86%99%E5%87%BA%E4%B8%80%E7%AF%87%E5%A5%BDHexo%E6%96%87%E7%AB%A0/20180620092749904.png" alt></p><p>打完收工！</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 语法说明 (简体中文版)</title>
      <link href="/Markdown%20%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E%20(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%E7%89%88)/"/>
      <url>/Markdown%20%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E%20(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%E7%89%88)/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown-语法说明-简体中文版-点击查看快速入门"><a href="#Markdown-语法说明-简体中文版-点击查看快速入门" class="headerlink" title="Markdown 语法说明 (简体中文版) / (点击查看快速入门)"></a>Markdown 语法说明 (简体中文版) / (<a href="http://wowubuntu.com/markdown/basic.html" target="_blank" rel="noopener">点击查看快速入门</a>)</h1><ul><li><a href="http://wowubuntu.com/markdown/index.html#overview" target="_blank" rel="noopener">概述</a><ul><li><a href="http://wowubuntu.com/markdown/index.html#philosophy" target="_blank" rel="noopener">宗旨</a></li><li><a href="http://wowubuntu.com/markdown/index.html#html" target="_blank" rel="noopener">兼容 HTML</a></li><li><a href="http://wowubuntu.com/markdown/index.html#autoescape" target="_blank" rel="noopener">特殊字符自动转换</a></li></ul></li><li><a href="http://wowubuntu.com/markdown/index.html#block" target="_blank" rel="noopener">区块元素</a><ul><li><a href="http://wowubuntu.com/markdown/index.html#p" target="_blank" rel="noopener">段落和换行</a></li><li><a href="http://wowubuntu.com/markdown/index.html#header" target="_blank" rel="noopener">标题</a></li><li><a href="http://wowubuntu.com/markdown/index.html#blockquote" target="_blank" rel="noopener">区块引用</a></li><li><a href="http://wowubuntu.com/markdown/index.html#list" target="_blank" rel="noopener">列表</a></li><li><a href="http://wowubuntu.com/markdown/index.html#precode" target="_blank" rel="noopener">代码区块</a></li><li><a href="http://wowubuntu.com/markdown/index.html#hr" target="_blank" rel="noopener">分隔线</a></li></ul></li><li><a href="http://wowubuntu.com/markdown/index.html#span" target="_blank" rel="noopener">区段元素</a><ul><li><a href="http://wowubuntu.com/markdown/index.html#link" target="_blank" rel="noopener">链接</a></li><li><a href="http://wowubuntu.com/markdown/index.html#em" target="_blank" rel="noopener">强调</a></li><li><a href="http://wowubuntu.com/markdown/index.html#code" target="_blank" rel="noopener">代码</a></li><li><a href="http://wowubuntu.com/markdown/index.html#img" target="_blank" rel="noopener">图片</a></li></ul></li><li><a href="http://wowubuntu.com/markdown/index.html#misc" target="_blank" rel="noopener">其它</a><ul><li><a href="http://wowubuntu.com/markdown/index.html#backslash" target="_blank" rel="noopener">反斜杠</a></li><li><a href="http://wowubuntu.com/markdown/index.html#autolink" target="_blank" rel="noopener">自动链接</a></li></ul></li><li><a href="http://wowubuntu.com/markdown/index.html#acknowledgement" target="_blank" rel="noopener">感谢</a></li><li><a href="http://wowubuntu.com/markdown/index.html#editor" target="_blank" rel="noopener">Markdown 免费编辑器</a></li></ul><hr><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h3><p>Markdown 的目标是实现「易读易写」。</p><p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a>、<a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a>、<a href="http://textism.com/tools/textile/" target="_blank" rel="noopener">Textile</a>、<a href="http://docutils.sourceforge.net/rst.html" target="_blank" rel="noopener">reStructuredText</a>、<a href="http://www.triptico.com/software/grutatxt.html" target="_blank" rel="noopener">Grutatext</a> 和 <a href="http://ettext.taint.org/doc/" target="_blank" rel="noopener">EtText</a>，而最大灵感来源其实是纯文本电子邮件的格式。</p><p>总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像<em>强调</em>。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h3 id="兼容-HTML"><a href="#兼容-HTML" class="headerlink" title="兼容 HTML"></a>兼容 HTML</h3><p>Markdown 语法的目标是：成为一种适用于网络的_书写_语言。</p><p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想_不是<em>要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种</em>发布<em>的格式，Markdown 是一种</em>书写_的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p><p>要制约的只有一些 HTML 区块元素――比如 <code>、</code>、<code>、</code> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 <code></code> 标签。</p><p>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">这是一个普通段落。</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">        Foo</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">这是另一个普通段落。</span><br></pre></td></tr></table></figure><p>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<code>*强调*</code>会没有效果。</p><p>HTML 的区段（行内）标签如 <code>、</code>、<code>可以在 Markdown 的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的</code> 或 <code></code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。</p><p>和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的。</p><h3 id="特殊字符自动转换"><a href="#特殊字符自动转换" class="headerlink" title="特殊字符自动转换"></a>特殊字符自动转换</h3><p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符号用于起始标签，<code>&amp;</code> 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 <code>&lt;</code> 和 <code>&amp;</code>。</p><p><code>&amp;</code> 字符尤其让网络文档编写者受折磨，如果你要打「<code>AT&amp;T</code>」 ，你必须要写成「<code>AT&amp;T</code>」。而网址中的 <code>&amp;</code> 字符也要转换。比如你要链接到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>你必须要把网址转换写为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>才能放到链接标签的 <code>href</code> 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。</p><p>Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 <code>&amp;</code> 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 <code>&amp;</code>;。</p><p>所以你如果要在文档中插入一个版权符号 <code>©</code>，你可以这样写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">©</span><br></pre></td></tr></table></figure><p>Markdown 会保留它不动。而若你写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;T</span><br></pre></td></tr></table></figure><p>Markdown 就会将它转为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;T</span><br></pre></td></tr></table></figure><p>类似的状况也会发生在 <code>&lt;</code> 符号上，因为 Markdown 允许 <a href="http://wowubuntu.com/markdown/index.html#html" target="_blank" rel="noopener">兼容 HTML</a> ，如果你是把 <code>&lt;</code> 符号作为 HTML 标签的定界符使用，那 Markdown 也不会对它做任何转换，但是如果你写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &lt; 5</span><br></pre></td></tr></table></figure><p>Markdown 将会把它转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &lt; 5</span><br></pre></td></tr></table></figure><p>不过需要注意的是，code 范围内，不论是行内还是区块， <code>&lt;</code> 和 <code>&amp;</code> 两个符号都_一定_会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 <code>&lt;</code> 和 <code>&amp;</code> 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）</p><hr><h2 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h2><h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 <code></code> 标签。</p><p>如果你_确实_想要依赖 Markdown 来插入 <code></code> 标签的话，在插入处先按入两个以上的空格然后回车。</p><p>的确，需要多费点事（多加空格）来产生 <code>，但是简单地「每个换行都转换为</code>」的方法在 Markdown 中并不适合， Markdown 中 email 式的 <a href="http://wowubuntu.com/markdown/index.html#blockquote" target="_blank" rel="noopener">区块引用</a> 和多段落的 <a href="http://wowubuntu.com/markdown/index.html#list" target="_blank" rel="noopener">列表</a> 在使用换行来排版的时候，不但更好用，还更方便阅读。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown 支持两种标题的语法，类 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a> 和类 <a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a> 形式。</p><p>类 Setext 形式是用底线的形式，利用 <code>=</code> （最高阶标题）和 <code>-</code> （第二阶标题），例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is an H1</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">This is an H2</span><br><span class="line">-------------</span><br></pre></td></tr></table></figure><p>任何数量的 <code>=</code> 和 <code>-</code> 都可以有效果。</p><p>类 Atx 形式则是在行首插入 1 到 6 个 <code>#</code> ，对应到标题 1 到 6 阶，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 这是 H1</span><br><span class="line"></span><br><span class="line">## 这是 H2</span><br><span class="line"></span><br><span class="line">###### 这是 H6</span><br></pre></td></tr></table></figure><p>你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 <code>#</code>，而行尾的 <code>#</code> 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 这是 H1 #</span><br><span class="line"></span><br><span class="line">## 这是 H2 ##</span><br><span class="line"></span><br><span class="line">### 这是 H3 ######</span><br></pre></td></tr></table></figure><h3 id="区块引用-Blockquotes"><a href="#区块引用-Blockquotes" class="headerlink" title="区块引用 Blockquotes"></a>区块引用 Blockquotes</h3><p>Markdown 标记区块引用是使用类似 email 中用 <code>&gt;</code> 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">&gt; </span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">&gt; id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"></span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is the first level of quoting.</span><br><span class="line">&gt;</span><br><span class="line">&gt; &gt; This is nested blockquote.</span><br><span class="line">&gt;</span><br><span class="line">&gt; Back to the first level.</span><br></pre></td></tr></table></figure><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; ## 这是一个标题。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 1\.   这是第一行列表项。</span><br><span class="line">&gt; 2\.   这是第二行列表项。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 给出一些例子代码：</span><br><span class="line">&gt; </span><br><span class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br></pre></td></tr></table></figure><p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择<em>增加引用阶层</em>。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号、加号或是减号作为列表标记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Red</span><br><span class="line">*   Green</span><br><span class="line">*   Blue</span><br></pre></td></tr></table></figure><p>等同于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+   Red</span><br><span class="line">+   Green</span><br><span class="line">+   Blue</span><br></pre></td></tr></table></figure><p>也等同于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-   Red</span><br><span class="line">-   Green</span><br><span class="line">-   Blue</span><br></pre></td></tr></table></figure><p>有序列表则使用数字接着一个英文句点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1\.  Bird</span><br><span class="line">2\.  McHale</span><br><span class="line">3\.  Parish</span><br></pre></td></tr></table></figure><p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Bird</span><br><span class="line">McHale</span><br><span class="line">Parish</span><br></pre></td></tr></table></figure><p>如果你的列表标记写成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1\.  Bird</span><br><span class="line">1\.  McHale</span><br><span class="line">1\.  Parish</span><br></pre></td></tr></table></figure><p>或甚至是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3\. Bird</span><br><span class="line">1\. McHale</span><br><span class="line">8\. Parish</span><br></pre></td></tr></table></figure><p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p><p>如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">    viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">    Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>但是如果你懒，那也行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 <code></code> 标签包起来，举例来说：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Bird</span><br><span class="line">Magic</span><br></pre></td></tr></table></figure><p>但是这个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line"></span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Bird</span><br><span class="line">Magic</span><br></pre></td></tr></table></figure><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1\.  This is a list item with two paragraphs. Lorem ipsum dolor</span><br><span class="line">    sit amet, consectetuer adipiscing elit. Aliquam hendrerit</span><br><span class="line">    mi posuere lectus.</span><br><span class="line"></span><br><span class="line">    Vestibulum enim wisi, viverra nec, fringilla in, laoreet</span><br><span class="line">    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum</span><br><span class="line">    sit amet velit.</span><br><span class="line"></span><br><span class="line">2\.  Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   This is a list item with two paragraphs.</span><br><span class="line"></span><br><span class="line">    This is the second paragraph in the list item. You&apos;re</span><br><span class="line">only required to indent the first line. Lorem ipsum dolor</span><br><span class="line">sit amet, consectetuer adipiscing elit.</span><br><span class="line"></span><br><span class="line">*   Another item in the same list.</span><br></pre></td></tr></table></figure><p>如果要在列表项目内放进引用，那 <code>&gt;</code> 就需要缩进：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*   A list item with a blockquote:</span><br><span class="line"></span><br><span class="line">    &gt; This is a blockquote</span><br><span class="line">    &gt; inside a list item.</span><br></pre></td></tr></table></figure><p>如果要放代码区块的话，该区块就需要缩进_两次_，也就是 8 个空格或是 2 个制表符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   一列表项包含一个列表区块：</span><br><span class="line"></span><br><span class="line">        &lt;代码写在这&gt;</span><br></pre></td></tr></table></figure><p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986\. What a great season.</span><br></pre></td></tr></table></figure><p>换句话说，也就是在行首出现<em>数字-句点-空白</em>，要避免这样的状况，你可以在句点前面加上反斜杠。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986\. What a great season.</span><br></pre></td></tr></table></figure><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <code>和</code> 标签来把代码区块包起来。</p><p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是一个普通段落：</span><br><span class="line"></span><br><span class="line">    这是一个代码区块。</span><br></pre></td></tr></table></figure><p>Markdown 会转换成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是一个普通段落：</span><br><span class="line"></span><br><span class="line">这是一个代码区块。</span><br></pre></td></tr></table></figure><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Here is an example of AppleScript:</span><br><span class="line"></span><br><span class="line">    tell application &quot;Foo&quot;</span><br><span class="line">        beep</span><br><span class="line">    end tell</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Here is an example of AppleScript:</span><br><span class="line"></span><br><span class="line">tell application &quot;Foo&quot;</span><br><span class="line">    beep</span><br><span class="line">end tell</span><br></pre></td></tr></table></figure><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>在代码区块里面， <code>&amp;</code> 、 <code>&lt;</code> 和 <code>&gt;</code> 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">© 2004 Foo Corporation</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">    &amp;copy; 2004 Foo Corporation</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">- - -</span><br><span class="line"></span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure><hr><h2 id="区段元素"><a href="#区段元素" class="headerlink" title="区段元素"></a>区段元素</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种形式的链接语法： <em>行内式</em>和<em>参考式</em>两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><p>要建立一个<em>行内式</em>的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure><p>会产生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is </span><br><span class="line">an example inline link.</span><br><span class="line"></span><br><span class="line">This link has no</span><br><span class="line">title attribute.</span><br></pre></td></tr></table></figure><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">See my [About](/about/) page for details.</span><br></pre></td></tr></table></figure><p><em>参考式</em>的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example][id] reference-style link.</span><br></pre></td></tr></table></figure><p>你也可以选择性地在两个方括号中间加上一个空格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example] [id] reference-style link.</span><br></pre></td></tr></table></figure><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>链接内容定义的形式为：</p><ul><li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li><li>接着一个冒号</li><li>接着一个以上的空格或制表符</li><li>接着链接的网址</li><li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li></ul><p>下面这三种链接的定义都是相同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[foo]: http://example.com/  &quot;Optional Title Here&quot;</span><br><span class="line">[foo]: http://example.com/  &apos;Optional Title Here&apos;</span><br><span class="line">[foo]: http://example.com/  (Optional Title Here)</span><br></pre></td></tr></table></figure><p><strong>请注意：</strong>有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p><p>链接网址也可以用尖括号包起来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]:   &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/longish/path/to/resource/here</span><br><span class="line">    &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并_不_区分大小写，因此下面两个链接是一样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[link text][a]</span><br><span class="line">[link text][A]</span><br></pre></td></tr></table></figure><p><em>隐式链接标记</em>功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google][]</span><br></pre></td></tr></table></figure><p>然后定义链接内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google]: http://google.com/</span><br></pre></td></tr></table></figure><p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Visit [Daring Fireball][] for more information.</span><br></pre></td></tr></table></figure><p>然后接着定义链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Daring Fireball]: http://daringfireball.net/</span><br></pre></td></tr></table></figure><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p><p>下面是一个参考式链接的范例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google] [1] than from</span><br><span class="line">[Yahoo] [2] or [MSN] [3].</span><br><span class="line"></span><br><span class="line">  [1]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [3]: http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>如果改成用链接名称的方式写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google][] than from</span><br><span class="line">[Yahoo][] or [MSN][].</span><br><span class="line"></span><br><span class="line">  [google]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>上面两种写法都会产生下面的 HTML。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from Google than from</span><br><span class="line">Yahoo</span><br><span class="line">or MSN.</span><br></pre></td></tr></table></figure><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)</span><br><span class="line">than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or</span><br><span class="line">[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</span><br></pre></td></tr></table></figure><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 <code>标签包围，用两个 `*` 或 `_` 包起来的话，则会被转成</code>，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line"></span><br><span class="line">_single underscores_</span><br><span class="line"></span><br><span class="line">**double asterisks**</span><br><span class="line"></span><br><span class="line">__double underscores__</span><br></pre></td></tr></table></figure><p>会转成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">single asterisks</span><br><span class="line"></span><br><span class="line">single underscores</span><br><span class="line"></span><br><span class="line">double asterisks</span><br><span class="line"></span><br><span class="line">double underscores</span><br></pre></td></tr></table></figure><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">un*frigging*believable</span><br></pre></td></tr></table></figure><p>但是<strong>如果你的 <code>*</code> 和 <code>_</code> 两边都有空白的话，它们就只会被当成普通的符号</strong>。</p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\*this text is surrounded by literal asterisks\*</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>如果要标记一小段行内代码，你可以用反引号把它包起来（<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>Use the <code>printf()</code> function.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">会产生：</span><br></pre></td></tr></table></figure><p>Use the printf() function.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</span><br></pre></td></tr></table></figure><p><code>There is a literal backtick (`) here.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">这段语法会产生：</span><br></pre></td></tr></table></figure><p>There is a literal backtick (`) here.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</span><br></pre></td></tr></table></figure><p>A single backtick in a code span: <code>`</code></p><p>A backtick-delimited string in a code span: <code>`foo`</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">会产生：</span><br></pre></td></tr></table></figure><p>A single backtick in a code span: `</p><p>A backtick-delimited string in a code span: <code>foo</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在代码区段内，`&amp;` 和尖括号**都**会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</span><br></pre></td></tr></table></figure><p>Please don’t use any <code></code> tags.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">转为：</span><br></pre></td></tr></table></figure><p>Please don’t use any <blink> tags.</blink></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">你也可以这样写：</span><br></pre></td></tr></table></figure><p><code>—</code> is the decimal-encoded equivalent of <code>—</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">以产生：</span><br></pre></td></tr></table></figure><p>&#8212; is the decimal-encoded<br>equivalent of &mdash;.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 图片</span><br><span class="line"></span><br><span class="line">很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</span><br><span class="line"></span><br><span class="line">Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： _行内式_和_参考式_。</span><br><span class="line"></span><br><span class="line">行内式的图片语法看起来像是：</span><br></pre></td></tr></table></figure><p><img src="/path/to/img.jpg" alt="Alt text"></p><p><img src="/path/to/img.jpg" alt="Alt text" title="Optional title"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">详细叙述如下：</span><br><span class="line"></span><br><span class="line">*   一个惊叹号 `!`</span><br><span class="line">*   接着一个方括号，里面放上图片的替代文字</span><br><span class="line">*   接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 &apos;title&apos; 文字。</span><br><span class="line"></span><br><span class="line">参考式的图片语法则长得像这样：</span><br></pre></td></tr></table></figure><p><img src="url/to/image" alt="Alt text" title="Optional title attribute"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 `` 标签。</span><br><span class="line"></span><br><span class="line">* * *</span><br><span class="line"></span><br><span class="line">## 其它</span><br><span class="line"></span><br><span class="line">### 自动链接</span><br><span class="line"></span><br><span class="line">Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 会转为：</span><br></pre></td></tr></table></figure><p><a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 会转成：</span><br></pre></td></tr></table></figure><p>address@exa<br>mple.com</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在浏览器里面，这段字串（其实是 `address@example.com`）会变成一个可以点击的「address@example.com」链接。</span><br><span class="line"></span><br><span class="line">（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</span><br><span class="line"></span><br><span class="line">### 反斜杠</span><br><span class="line"></span><br><span class="line">Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 `` 标签），你可以在星号的前面加上反斜杠：</span><br></pre></td></tr></table></figure><p>*literal asterisks*</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</span><br></pre></td></tr></table></figure><p>\   反斜线<br>`   反引号</p><ul><li>星号<br>_   底线<br>{}  花括号<br>[]  方括号<br>()  括弧<h1 id="井字号"><a href="#井字号" class="headerlink" title="井字号"></a>井字号</h1></li></ul><ul><li>加号</li></ul><ul><li>减号<br>.   英文句点<br>!   惊叹号</li></ul><p><code>`</code></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
